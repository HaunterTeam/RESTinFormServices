
package document.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "People", targetNamespace = "http://ws.document/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface People {


    /**
     * 
     * @param token
     * @param personId
     * @return
     *     returns document.ws.Person
     * @throws IOException_Exception
     * @throws MalformedURLException_Exception
     */
    @WebMethod
    @WebResult(name = "singlePerson", targetNamespace = "")
    @RequestWrapper(localName = "readPerson", targetNamespace = "http://ws.document/", className = "document.ws.ReadPerson")
    @ResponseWrapper(localName = "readPersonResponse", targetNamespace = "http://ws.document/", className = "document.ws.ReadPersonResponse")
    @Action(input = "http://ws.document/People/readPersonRequest", output = "http://ws.document/People/readPersonResponse", fault = {
        @FaultAction(className = MalformedURLException_Exception.class, value = "http://ws.document/People/readPerson/Fault/MalformedURLException"),
        @FaultAction(className = IOException_Exception.class, value = "http://ws.document/People/readPerson/Fault/IOException")
    })
    public Person readPerson(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws IOException_Exception, MalformedURLException_Exception
    ;

}
